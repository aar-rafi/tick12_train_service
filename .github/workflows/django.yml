name: Django Tests and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: test_db
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: sleep 10

      - name: Run tests
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          DATABASE_URL: postgres://postgres:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/test_db
        run: |
          python manage.py migrate
          python manage.py test

  build-and-push:
    runs-on: ubuntu-latest
    needs: test # Ensure tests pass before building the image

    steps:
      - uses: actions/checkout@v2

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/tick12_train_service:${{ github.sha }} .

      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/tick12_train_service:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push  # Ensure image is pushed before deploying

    steps:
      - uses: actions/checkout@v2

      # Use a pre-built action to install kubectl
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0' # You can specify your desired version

      # Use a pre-built action to install and authenticate doctl
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # Set kubectl context for DigitalOcean Kubernetes cluster
      - name: Set kubectl context for the Kubernetes cluster
        run: doctl kubernetes cluster kubeconfig save ${{ secrets.DIGITALOCEAN_CLUSTER_ID }}

      # Deploy to DigitalOcean Kubernetes
      - name: Deploy to DigitalOcean Kubernetes
        run: |
          kubectl rollout restart deployment tick12-train-deploy
